name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: 
          - { name: "latest", base: "python:3.11-slim", gpu: "false", gpu_nvidia: "false", gpu_amd: "false" }
          - { name: "gpu-nvidia", base: "nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04", gpu: "true", gpu_nvidia: "true", gpu_amd: "false" }
          - { name: "gpu-amd", base: "rocm/dev-ubuntu-22.04:6.4-complete", gpu: "false", gpu_nvidia: "false", gpu_amd: "true" }
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Free up disk space
        run: |
          echo "Available disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/share/boost
          sudo rm -rf /opt/microsoft/msedge /opt/microsoft/powershell /opt/pipx /usr/lib/mono
          sudo rm -rf /usr/local/.ghcup /usr/share/swift
          docker system prune -af
          echo "Available disk space after cleanup:"
          df -h
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          tags: |
            type=ref,event=branch,suffix=-${{ matrix.variant.name }}
            type=ref,event=pr,suffix=-${{ matrix.variant.name }}
            type=semver,pattern={{version}},suffix=-${{ matrix.variant.name }}
            type=raw,value=${{ matrix.variant.name }},enable={{is_default_branch}}
      
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/backend/Dockerfile
          push: true
          platforms: ${{ matrix.variant.name == 'latest' && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ matrix.variant.base }}
            USE_GPU=${{ matrix.variant.gpu }}
            USE_GPU_NVIDIA=${{ matrix.variant.gpu_nvidia }}
            USE_GPU_AMD=${{ matrix.variant.gpu_amd }}
          # Temporarily disabled due to GitHub Actions Cache service outage
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Free up disk space
        run: |
          echo "Available disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/share/boost
          sudo rm -rf /opt/microsoft/msedge /opt/microsoft/powershell /opt/pipx /usr/lib/mono
          sudo rm -rf /usr/local/.ghcup /usr/share/swift
          docker system prune -af
          echo "Available disk space after cleanup:"
          df -h
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Temporarily disabled due to GitHub Actions Cache service outage
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
