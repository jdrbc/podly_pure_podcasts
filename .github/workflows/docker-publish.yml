name: Build and Publish Docker Images

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/podly-pure-podcasts

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - {
              name: "latest",
              base: "python:3.11-slim",
              gpu: "false",
              gpu_nvidia: "false",
              gpu_amd: "false",
              lite_build: "false",
            }
          - {
              name: "lite",
              base: "python:3.11-slim",
              gpu: "false",
              gpu_nvidia: "false",
              gpu_amd: "false",
              lite_build: "true",
            }
          - {
              name: "gpu-nvidia",
              base: "nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04",
              gpu: "true",
              gpu_nvidia: "true",
              gpu_amd: "false",
              lite_build: "false",
            }
          - {
              name: "gpu-amd",
              base: "rocm/dev-ubuntu-22.04:6.4-complete",
              gpu: "false",
              gpu_nvidia: "false",
              gpu_amd: "true",
              lite_build: "false",
            }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Available disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/share/boost
          sudo rm -rf /opt/microsoft/msedge /opt/microsoft/powershell /opt/pipx /usr/lib/mono
          sudo rm -rf /usr/local/.ghcup /usr/share/swift
          docker system prune -af
          echo "Available disk space after cleanup:"
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-${{ matrix.variant.name }}
            type=ref,event=pr,suffix=-${{ matrix.variant.name }}
            type=semver,pattern={{version}},suffix=-${{ matrix.variant.name }}
            type=raw,value=${{ matrix.variant.name }},enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ (matrix.variant.name == 'latest' || matrix.variant.name == 'lite') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ matrix.variant.base }}
            USE_GPU=${{ matrix.variant.gpu }}
            USE_GPU_NVIDIA=${{ matrix.variant.gpu_nvidia }}
            USE_GPU_AMD=${{ matrix.variant.gpu_amd }}
            LITE_BUILD=${{ matrix.variant.lite_build }}
          # Temporarily disabled due to GitHub Actions Cache service outage
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
